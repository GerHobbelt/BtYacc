--- btyacc-3.0.orig/Makefile
+++ btyacc-3.0/Makefile
@@ -2,15 +2,18 @@
 # Makefile for BtYacc.
 #
 
-VERSION       = 3-0
+# Edited for Debian GNU/Linux.
+DESTDIR =
+
+VERSION       = 3.0
 
 DEST	      = .
 
 HDRS	      = defs.h mstring.h
 
-CFLAGS	      = -g -Wall -Wstrict-prototypes -Wmissing-prototypes
+CFLAGS	      = -g -Wall -O2 -Wstrict-prototypes -Wmissing-prototypes
 
-LDFLAGS	      = -static
+LDFLAGS	      = #-static
 
 LIBS	      =
 
@@ -51,7 +54,7 @@
 index:;		ctags -wx $(HDRS) $(SRCS)
 
 install:	$(PROGRAM)
-		cp $(PROGRAM).exe /bin
+		install $(PROGRAM) $(DESTDIR)/usr/bin
 
 oldinstall:	$(PROGRAM)
 		@echo Installing $(PROGRAM) in $(DEST)
@@ -79,10 +82,13 @@
 		mv btyacc.zip btyacc-$(VERSION).zip
 
 skeleton.c: btyaccpa.ske skel2c
-		awk -f skel2c btyaccpa.ske >skeleton.c
+		awk -f skel2c btyaccpa.ske > skeleton.c
 
 etags TAGS:
 		etags *.c *.h
+
+btyacc.1:	btyacc.sgml
+		docbook-to-man btyacc.sgml > btyacc.1
 
 ###
 closure.o: defs.h
--- btyacc-3.0.orig/btyaccpa.ske
+++ btyacc-3.0/btyaccpa.ske
@@ -64,14 +64,14 @@
 #define YYPOSNOUT    (yyps->pos)
 #endif
 
-// If delete function is not defined by the user, do not deletions.
+/* If delete function is not defined by the user, do not delete. */
 #ifndef YYDELETEVAL
-#define YYDELETEVAL(v) 
+#  define YYDELETEVAL(v, t) 
 #endif
 
-// If delete function is not defined by the user, do not deletions.
+/* If delete function is not defined by the user, do not delete. */
 #ifndef YYDELETEPOSN
-#define YYDELETEPOSN(v) 
+#  define YYDELETEPOSN(v, t) 
 #endif
 
 #define yyclearin (yychar=(-1))
@@ -552,14 +552,20 @@
     YYMoreStack(yyps);
   }
 
+# ifdef _YACC_DEFAULT_ACTION_
   /* "$$ = NULL" default action */
   memset(&yyps->val, 0, sizeof(yyps->val));
-
-  /* default reduced position is NULL -- no position at all.
-     no position will be assigned at trial time and if no position handling is present */
+# else
+  /* RA: bison compatibility: default action is '$$ = $1;' */
+  if (yym > 0) yyps->val = (yyps->vsp)[1 - yym];
+# endif
+
+  /* Default reduced position is NULL -- no position at all. No
+     position will be assigned at trial time and if no position
+     handling is present */
   memset(&yyps->pos, 0, sizeof(yyps->pos));
 
-  reduce_posn = TRUE;
+  reduce_posn = 1;
 
   switch (yyn) {
 
--- btyacc-3.0.orig/defs.h
+++ btyacc-3.0/defs.h
@@ -59,9 +59,9 @@
 
 /* defines for constructing filenames */
 
-#define DEFINES_SUFFIX  "_tab.h"
-#define OUTPUT_SUFFIX   "_tab.c"
-#define CODE_SUFFIX     "_code.c"
+#define DEFINES_SUFFIX  ".tab.h"
+#define OUTPUT_SUFFIX   ".tab.c"
+#define CODE_SUFFIX     ".code.c"
 #define VERBOSE_SUFFIX  ".output"
 
 /* keyword codes */
@@ -391,7 +391,7 @@
 
 /* main.c */
 void done(int);
-void onintr(void);
+void onintr(int);
 void set_signals(void);
 void usage(void);
 void getargs(int, char **);
--- btyacc-3.0.orig/main.c
+++ btyacc-3.0/main.c
@@ -1,7 +1,10 @@
 #include "defs.h"
 #include <signal.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include <unistd.h>
+#include <sys/types.h>
+#include <sys/stat.h>
 
 char dflag;
 char lflag;
@@ -69,14 +72,11 @@
 
 void done(int k)
 {
-    if (action_file) { fclose(action_file); unlink(action_file_name); }
-    if (text_file) { fclose(text_file); unlink(text_file_name); }
-    if (union_file) { fclose(union_file); unlink(union_file_name); }
     exit(k);
 }
 
 
-void onintr()
+void onintr(int ignored)
 {
     done(1);
 }
@@ -99,11 +99,19 @@
 }
 
 
-void usage()
-{
-    fprintf(stderr, "usage: %s [-dlrtv] [-b file_prefix] [-S skeleton file] "
-		    "filename\n", myname);
-    exit(1);
+void usage() {
+  printf("usage: %s [OPTIONS] file\n", myname);
+  puts(
+    "  -b prefix    Change `y' into `prefix' in all output filenames\n"
+    "  -d           Generate header file `y.tab.h'\n"
+    "  -DNAME       Define btyacc preprocessor variable NAME\n"
+    "  -E           Print preprocessed grammar to stdout\n"
+    "  -l           Do not insert #line directives into generated code\n"
+    "  -r           Write tables to `y.tab.c', code to `y.code.c'\n"
+    "  -S x.skel    Select parser skeleton\n"
+    "  -t           Include debugging code in generated parser\n"
+    "  -v           Write description of parser to `y.output'");
+  exit(1);
 }
 
 
@@ -295,19 +303,6 @@
     text_file_name[len + 5] = 't';
     union_file_name[len + 5] = 'u';
 
-    if(mktemp(action_file_name)==NULL) {
-      fprintf(stderr, "btyacc: Cannot create temporary file\n");
-      exit(1);
-    }
-    if(mktemp(text_file_name)==NULL) {
-      fprintf(stderr, "btyacc: Cannot create temporary file\n");
-      exit(1);
-    }
-    if(mktemp(union_file_name)==NULL) {
-      fprintf(stderr, "btyacc: Cannot create temporary file\n");
-      exit(1);
-    }
-
     len = strlen(file_prefix);
 
     output_file_name = MALLOC(len + 7);
@@ -347,6 +342,23 @@
 }
 
 
+static FILE* my_mkstemp(char* template) {
+    /* Some old implementations of mkstemp() create files mode 0666. 
+       We change the umask to avoid any problem. */
+  mode_t old_mode;
+  int fd;
+  FILE* result;
+
+  old_mode = umask(077);
+  fd = mkstemp(template);
+  umask(old_mode);
+  if (fd == -1) return 0;
+  result = fdopen(fd, "w+b"); // result == 0 on error
+  unlink(template);
+  return result;
+}
+
+
 void open_files()
 {
     create_file_names();
@@ -358,11 +370,11 @@
 	    open_error(input_file_name);
     }
 
-    action_file = fopen(action_file_name, "w");
+    action_file = my_mkstemp(action_file_name);
     if (action_file == 0)
 	open_error(action_file_name);
 
-    text_file = fopen(text_file_name, "w");
+    text_file = my_mkstemp(text_file_name);
     if (text_file == 0)
 	open_error(text_file_name);
 
@@ -378,7 +390,7 @@
 	defines_file = fopen(defines_file_name, "w");
 	if (defines_file == 0)
 	    open_error(defines_file_name);
-	union_file = fopen(union_file_name, "w");
+	union_file = my_mkstemp(union_file_name);
 	if (union_file ==  0)
 	    open_error(union_file_name);
     }
--- btyacc-3.0.orig/mkpar.c
+++ btyacc-3.0/mkpar.c
@@ -176,11 +176,12 @@
     for (i = 3; i < nrules; ++i)
 	if (!rules_used[i]) ++nunused;
 
-    if (nunused)
+    if (nunused) {
 	if (nunused == 1)
 	    fprintf(stderr, "%s: 1 rule never reduced\n", myname);
 	else
 	    fprintf(stderr, "%s: %d rules never reduced\n", myname, nunused);
+    }
 }
 
 
--- btyacc-3.0.orig/mstring.c
+++ btyacc-3.0/mstring.c
@@ -2,6 +2,7 @@
 #include <stdio.h>
 #include <stdarg.h>
 #include <ctype.h>
+#include <string.h>
 #include "mstring.h"
 
 /* parameters about string length.  START is the starting size and
--- btyacc-3.0.orig/output.c
+++ btyacc-3.0/output.c
@@ -849,9 +849,7 @@
 
     if (dflag && unionized)
     {
-	fclose(union_file);
-	union_file = fopen(union_file_name, "r");
-	if (union_file == NULL) open_error(union_file_name);
+	rewind(union_file);
 	while ((c = getc(union_file)) != EOF) {
 	  putc(c, defines_file);
 	}
@@ -871,10 +869,7 @@
     register int state;	/* 0=middle of line, 1=start of line, 2=seen '#' */
 
     state = 1;
-    fclose(text_file);
-    text_file = fopen(text_file_name, "r");
-    if (text_file == NULL)
-	open_error(text_file_name);
+    rewind(text_file);
     in = text_file;
     if ((c = getc(in)) == EOF)
 	return;
@@ -1191,11 +1186,7 @@
     register int state;	/* 0=middle of line, 1=start of line, 2=seen '#' */
 
     state = 1;
-    fclose(action_file);
-    action_file = fopen(action_file_name, "r");
-    if (action_file == NULL)
-	open_error(action_file_name);
-
+    rewind(action_file);
     if ((c = getc(action_file)) == EOF)
 	return;
 
--- btyacc-3.0.orig/reader.c
+++ btyacc-3.0/reader.c
@@ -631,15 +631,20 @@
     return (lookup(cache));
 }
 
-int get_number()
-{
-    register int c;
-    register int n;
+/* Return (possibly negative) integer stored a cptr. On exit, cptr
+   points to first character after integer. */
+int get_number() {
+  int n = 0;
+  char c, first = *cptr;
+
+  if (first == '-')
+    ++cptr;
+  for (c = *cptr; isdigit(c); c = *++cptr)
+    n = 10 * n + (c - '0');
+  if (first == '-')
+    n = -n;
 
-    n = 0;
-    for (c = *cptr; isdigit(c); c = *++cptr)
-	n = 10*n + (c - '0');
-    return (n);
+  return n;
 }
 
 // 
@@ -1421,19 +1426,15 @@
 		++cptr;
 		FREE(d_line);
 		goto loop; }
-	    else if (isdigit(c)) {
+	    else if (isdigit(c) || (c == '-' && isdigit(cptr[1]))) {
 		i = get_number();
-		if (i > maxoffset) {
+		if (i <= 0) {
+		    fprintf(f, "yyvsp[%d].%s", i - n, tag); }
+		else if (i > maxoffset) {
 		    dollar_warning(d_lineno, i);
 		    fprintf(f, "yyvsp[%d].%s", i - maxoffset, tag); }
 		else
 		    fprintf(f, "yyvsp[%d].%s", offsets[i], tag);
-		FREE(d_line);
-		goto loop; }
-	    else if (c == '-' && isdigit(cptr[1])) {
-		++cptr;
-		i = -get_number() - n;
-		fprintf(f, "yyvsp[%d].%s", i, tag);
 		FREE(d_line);
 		goto loop; }
 	    else if (isalpha(c) || c == '_') {
--- btyacc-3.0.orig/skel2c
+++ btyacc-3.0/skel2c
@@ -20,7 +20,11 @@
 	next; 
       }
       { if (havesection) {
-	    gsub(/\\/, "\\\\");
+	    # Could use 'gsub(/\\/, "\\\\")' instead of the following
+	    # two lines, but there's a bug in mawk and the original
+	    # awk (not in gawk) which is triggered by that.
+	    gsub(/\\/, "\\\1");
+	    gsub(/\1/, "\\");
 	    gsub(/\t/, "\\t");
 	    gsub(/\"/, "\\\"");
 	    printf "    \"%s\",\n", $0; 
