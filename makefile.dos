# Makefile for MS-DOS using Borland C (by P. Foggia)
#
DEST          = .

HDRS          = defs.h mstring.h

CFLAGS        = -ml -c

LDFLAGS       = /c

# Change LIBDIR to your compiler's library path
LIBDIR        = L:\bc\lib
C0            = $(LIBDIR)\c0l.obj
CLIB          = $(LIBDIR)\cl.lib

LIBS          =

LINKER        = tlink
CC            = bcc

MAKEFILE      = Makefile.dos

OBJS1  = closure.obj error.obj lalr.obj log.obj lr0.obj main.obj mkpar.obj output.obj
OBJS2  = mstring.obj reader.obj skeleton.obj push_skel.obj symtab.obj verbose.obj warshall.obj write.obj
OBJS   = $(OBJS1) $(OBJS2)


PROGRAM       = btyacc.exe

SRCS          = closure.c error.c lalr.c log.c lr0.c main.c mkpar.c output.c  \
                mstring.c reader.c skeleton.c push_skel.c symtab.c verbose.c warshall.c write.c

OTHERS        = README README.BYACC \
                Makefile btyaccpa.skeleton empty.y skel2c manpage

all:            $(PROGRAM)

$(PROGRAM):     $(OBJS) $(LIBS)
        @echo Linking $(PROGRAM) ...
        @echo $(LDFLAGS) $(C0) + > link.lst
        @echo $(OBJS1) + >> link.lst
        @echo $(OBJS2)  >> link.lst
        @echo $(PROGRAM) >>link.lst
        @echo nul >> link.lst
        @echo $(CLIB) >> link.lst
        @$(LINKER) @link.lst
        @echo ... done




program:        $(PROGRAM)


skeleton.c: btyaccpa.skeleton
        awk -f skel2c btyaccpa.skeleton >skeleton.c

push_skel.c: push.skeleton
        awk -f skel2c push.skeleton >push_skel.c

###
closure.obj: defs.h
error.obj: defs.h
lalr.obj: defs.h
log.obj: log.h
lr0.obj: defs.h log.h
main.obj: defs.h log.h
mkpar.obj: defs.h log.h
mstring.obj: mstring.h
output.obj: defs.h write.h
reader.obj: defs.h mstring.h write.h
skeleton.obj: defs.h
push_skel.obj: defs.h
symtab.obj: defs.h
verbose.obj: defs.h
warshall.obj: defs.h
write.obj: write.h
